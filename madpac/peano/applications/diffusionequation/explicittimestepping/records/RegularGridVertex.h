#ifndef _PEANO_APPLICATIONS_DIFFUSIONEQUATION_EXPLICITTIMESTEPPING_RECORDS_REGULARGRIDVERTEX_H
#define _PEANO_APPLICATIONS_DIFFUSIONEQUATION_EXPLICITTIMESTEPPING_RECORDS_REGULARGRIDVERTEX_H

#ifdef Parallel
	#include <mpi.h>
#endif
#include "tarch/logging/Log.h"
#include "tarch/la/Vector.h"
#include <bitset>
#include <string>
#include <iostream>
#include "peano/utils/Globals.h"
#include "peano/utils/Globals.h"

namespace peano {
   namespace applications {
      namespace diffusionequation {
         namespace explicittimestepping {
            namespace records {
               class RegularGridVertex;
               class RegularGridVertexPacked;
            }
         }
      }
   }
}

#if !defined(Debug) && !defined(Parallel) && !defined(Asserts)
   /**
    * @author This class was autogenerated by DaStGen
    * 		   DataStructureGenerator (DaStGen), 2007-2009,
    * 		   by Wolfgang Eckhardt
    *
    * 		   build date: 09-12-2010 17:47
    *
    * @date   21/07/2011 14:26
    */
   class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex { 
      
      public:
         
         typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked Packed;
         
         enum InsideOutsideDomain {
            Inside = 0, Boundary = 1, Outside = 2
         };
         
         struct PersistentRecords {
            double _rhs;
            double _u;
            tarch::la::Vector<THREE_POWER_D,double> _stencil;
            InsideOutsideDomain _insideOutsideDomain;
            /**
             * Generated
             */
            PersistentRecords();
            
            /**
             * Generated
             */
            PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain);
            
            /**
             * Generated
             */
            double getRhs() const;
            
            /**
             * Generated
             */
            void setRhs(const double& rhs);
            
            /**
             * Generated
             */
            double getU() const;
            
            /**
             * Generated
             */
            void setU(const double& u);
            
            /**
             * Generated
             */
            tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
            
            /**
             * Generated
             */
            void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
            
            /**
             * Generated
             */
            InsideOutsideDomain getInsideOutsideDomain() const;
            
            /**
             * Generated
             */
            void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
            
            
         };
         
      private: 
         PersistentRecords _persistentRecords;
         double _residual;
         tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
         
      public:
         /**
          * Generated
          */
         RegularGridVertex();
         
         /**
          * Generated
          */
         RegularGridVertex(const PersistentRecords& persistentRecords);
         
         /**
          * Generated
          */
         RegularGridVertex(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain);
         
         /**
          * Generated
          */
         RegularGridVertex(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain);
         
         /**
          * Generated
          */
         virtual ~RegularGridVertex();
         
         /**
          * Generated
          */
         double getRhs() const;
         
         /**
          * Generated
          */
         void setRhs(const double& rhs);
         
         /**
          * Generated
          */
         double getU() const;
         
         /**
          * Generated
          */
         void setU(const double& u);
         
         /**
          * Generated
          */
         double getResidual() const;
         
         /**
          * Generated
          */
         void setResidual(const double& residual);
         
         /**
          * Generated
          */
         tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
         
         /**
          * Generated
          */
         void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
         
         /**
          * Generated
          */
         double getStencil(int elementIndex) const;
         
         /**
          * Generated
          */
         void setStencil(int elementIndex, const double& stencil);
         
         /**
          * Generated
          */
         tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
         
         /**
          * Generated
          */
         void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
         
         /**
          * Generated
          */
         double getLinearSurplus(int elementIndex) const;
         
         /**
          * Generated
          */
         void setLinearSurplus(int elementIndex, const double& linearSurplus);
         
         /**
          * Generated
          */
         InsideOutsideDomain getInsideOutsideDomain() const;
         
         /**
          * Generated
          */
         void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
         
         /**
          * Generated
          */
         static std::string toString(const InsideOutsideDomain& param);
         
         /**
          * Generated
          */
         static std::string getInsideOutsideDomainMapping();
         
         /**
          * Generated
          */
         std::string toString() const;
         
         /**
          * Generated
          */
         void toString(std::ostream& out) const;
         
         
         PersistentRecords getPersistentRecords() const;
         /**
          * Generated
          */
         RegularGridVertexPacked convert() const;
         
         
      #ifdef Parallel
         protected:
            static tarch::logging::Log _log;
            
            int _senderRank;
            
         public:
            
            /**
             * Global that represents the mpi datatype.
             */
            static MPI_Datatype Datatype;
            
            /**
             * Initializes the data type for the mpi operations. Has to be called
             * before the very first send or receive operation is called.
             */
            static void initDatatype();
            
            static void shutdownDatatype();
            
            void send(int destination, int tag);
            
            void receive(int source, int tag);
            
            static bool isMessageInQueue(int tag);
            
            int getSenderRank() const;
            
      #endif
         
      };
      
      /**
       * @author This class was autogenerated by DaStGen
       * 		   DataStructureGenerator (DaStGen), 2007-2009,
       * 		   by Wolfgang Eckhardt
       *
       * 		   build date: 09-12-2010 17:47
       *
       * @date   21/07/2011 14:26
       */
      class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked { 
         
         public:
            
            typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex::InsideOutsideDomain InsideOutsideDomain;
            
            struct PersistentRecords {
               double _rhs;
               double _u;
               tarch::la::Vector<THREE_POWER_D,double> _stencil;
               
               /** mapping of records:
               || Member 	|| startbit 	|| length
                |  insideOutsideDomain	| startbit 0	| #bits 2
                */
               short int _packedRecords0;
               
               /**
                * Generated
                */
               PersistentRecords();
               
               /**
                * Generated
                */
               PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain);
               
               /**
                * Generated
                */
               double getRhs() const;
               
               /**
                * Generated
                */
               void setRhs(const double& rhs);
               
               /**
                * Generated
                */
               double getU() const;
               
               /**
                * Generated
                */
               void setU(const double& u);
               
               /**
                * Generated
                */
               tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
               
               /**
                * Generated
                */
               void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
               
               /**
                * Generated
                */
               InsideOutsideDomain getInsideOutsideDomain() const;
               
               /**
                * Generated
                */
               void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
               
               
            };
            
         private: 
            PersistentRecords _persistentRecords;
            double _residual;
            tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
            
         public:
            /**
             * Generated
             */
            RegularGridVertexPacked();
            
            /**
             * Generated
             */
            RegularGridVertexPacked(const PersistentRecords& persistentRecords);
            
            /**
             * Generated
             */
            RegularGridVertexPacked(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain);
            
            /**
             * Generated
             */
            RegularGridVertexPacked(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain);
            
            /**
             * Generated
             */
            virtual ~RegularGridVertexPacked();
            
            /**
             * Generated
             */
            double getRhs() const;
            
            /**
             * Generated
             */
            void setRhs(const double& rhs);
            
            /**
             * Generated
             */
            double getU() const;
            
            /**
             * Generated
             */
            void setU(const double& u);
            
            /**
             * Generated
             */
            double getResidual() const;
            
            /**
             * Generated
             */
            void setResidual(const double& residual);
            
            /**
             * Generated
             */
            tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
            
            /**
             * Generated
             */
            void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
            
            /**
             * Generated
             */
            double getStencil(int elementIndex) const;
            
            /**
             * Generated
             */
            void setStencil(int elementIndex, const double& stencil);
            
            /**
             * Generated
             */
            tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
            
            /**
             * Generated
             */
            void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
            
            /**
             * Generated
             */
            double getLinearSurplus(int elementIndex) const;
            
            /**
             * Generated
             */
            void setLinearSurplus(int elementIndex, const double& linearSurplus);
            
            /**
             * Generated
             */
            InsideOutsideDomain getInsideOutsideDomain() const;
            
            /**
             * Generated
             */
            void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
            
            /**
             * Generated
             */
            static std::string toString(const InsideOutsideDomain& param);
            
            /**
             * Generated
             */
            static std::string getInsideOutsideDomainMapping();
            
            /**
             * Generated
             */
            std::string toString() const;
            
            /**
             * Generated
             */
            void toString(std::ostream& out) const;
            
            
            PersistentRecords getPersistentRecords() const;
            /**
             * Generated
             */
            RegularGridVertex convert() const;
            
            
         #ifdef Parallel
            protected:
               static tarch::logging::Log _log;
               
               int _senderRank;
               
            public:
               
               /**
                * Global that represents the mpi datatype.
                */
               static MPI_Datatype Datatype;
               
               /**
                * Initializes the data type for the mpi operations. Has to be called
                * before the very first send or receive operation is called.
                */
               static void initDatatype();
               
               static void shutdownDatatype();
               
               void send(int destination, int tag);
               
               void receive(int source, int tag);
               
               static bool isMessageInQueue(int tag);
               
               int getSenderRank() const;
               
         #endif
            
         };
         
         
      #elif defined(Parallel) && defined(Asserts) && defined(Debug)
         /**
          * @author This class was autogenerated by DaStGen
          * 		   DataStructureGenerator (DaStGen), 2007-2009,
          * 		   by Wolfgang Eckhardt
          *
          * 		   build date: 09-12-2010 17:47
          *
          * @date   21/07/2011 14:26
          */
         class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex { 
            
            public:
               
               typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked Packed;
               
               enum InsideOutsideDomain {
                  Inside = 0, Boundary = 1, Outside = 2
               };
               
               struct PersistentRecords {
                  double _rhs;
                  double _u;
                  tarch::la::Vector<THREE_POWER_D,double> _stencil;
                  InsideOutsideDomain _insideOutsideDomain;
                  tarch::la::Vector<DIMENSIONS,double> _x;
                  tarch::la::Vector<TWO_POWER_D,int> _adjacentRanks;
                  /**
                   * Generated
                   */
                  PersistentRecords();
                  
                  /**
                   * Generated
                   */
                  PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                  
                  /**
                   * Generated
                   */
                  double getRhs() const;
                  
                  /**
                   * Generated
                   */
                  void setRhs(const double& rhs);
                  
                  /**
                   * Generated
                   */
                  double getU() const;
                  
                  /**
                   * Generated
                   */
                  void setU(const double& u);
                  
                  /**
                   * Generated
                   */
                  tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                  
                  /**
                   * Generated
                   */
                  void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                  
                  /**
                   * Generated
                   */
                  InsideOutsideDomain getInsideOutsideDomain() const;
                  
                  /**
                   * Generated
                   */
                  void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                  
                  /**
                   * Generated
                   */
                  tarch::la::Vector<DIMENSIONS,double> getX() const;
                  
                  /**
                   * Generated
                   */
                  void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                  
                  /**
                   * Generated
                   */
                  tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                  
                  /**
                   * Generated
                   */
                  void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                  
                  
               };
               
            private: 
               PersistentRecords _persistentRecords;
               double _residual;
               tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
               
            public:
               /**
                * Generated
                */
               RegularGridVertex();
               
               /**
                * Generated
                */
               RegularGridVertex(const PersistentRecords& persistentRecords);
               
               /**
                * Generated
                */
               RegularGridVertex(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
               
               /**
                * Generated
                */
               RegularGridVertex(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
               
               /**
                * Generated
                */
               virtual ~RegularGridVertex();
               
               /**
                * Generated
                */
               double getRhs() const;
               
               /**
                * Generated
                */
               void setRhs(const double& rhs);
               
               /**
                * Generated
                */
               double getU() const;
               
               /**
                * Generated
                */
               void setU(const double& u);
               
               /**
                * Generated
                */
               double getResidual() const;
               
               /**
                * Generated
                */
               void setResidual(const double& residual);
               
               /**
                * Generated
                */
               tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
               
               /**
                * Generated
                */
               void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
               
               /**
                * Generated
                */
               double getStencil(int elementIndex) const;
               
               /**
                * Generated
                */
               void setStencil(int elementIndex, const double& stencil);
               
               /**
                * Generated
                */
               tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
               
               /**
                * Generated
                */
               void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
               
               /**
                * Generated
                */
               double getLinearSurplus(int elementIndex) const;
               
               /**
                * Generated
                */
               void setLinearSurplus(int elementIndex, const double& linearSurplus);
               
               /**
                * Generated
                */
               InsideOutsideDomain getInsideOutsideDomain() const;
               
               /**
                * Generated
                */
               void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
               
               /**
                * Generated
                */
               tarch::la::Vector<DIMENSIONS,double> getX() const;
               
               /**
                * Generated
                */
               void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
               
               /**
                * Generated
                */
               double getX(int elementIndex) const;
               
               /**
                * Generated
                */
               void setX(int elementIndex, const double& x);
               
               /**
                * Generated
                */
               tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
               
               /**
                * Generated
                */
               void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
               
               /**
                * Generated
                */
               int getAdjacentRanks(int elementIndex) const;
               
               /**
                * Generated
                */
               void setAdjacentRanks(int elementIndex, const int& adjacentRanks);
               
               /**
                * Generated
                */
               static std::string toString(const InsideOutsideDomain& param);
               
               /**
                * Generated
                */
               static std::string getInsideOutsideDomainMapping();
               
               /**
                * Generated
                */
               std::string toString() const;
               
               /**
                * Generated
                */
               void toString(std::ostream& out) const;
               
               
               PersistentRecords getPersistentRecords() const;
               /**
                * Generated
                */
               RegularGridVertexPacked convert() const;
               
               
            #ifdef Parallel
               protected:
                  static tarch::logging::Log _log;
                  
                  int _senderRank;
                  
               public:
                  
                  /**
                   * Global that represents the mpi datatype.
                   */
                  static MPI_Datatype Datatype;
                  
                  /**
                   * Initializes the data type for the mpi operations. Has to be called
                   * before the very first send or receive operation is called.
                   */
                  static void initDatatype();
                  
                  static void shutdownDatatype();
                  
                  void send(int destination, int tag);
                  
                  void receive(int source, int tag);
                  
                  static bool isMessageInQueue(int tag);
                  
                  int getSenderRank() const;
                  
            #endif
               
            };
            
            /**
             * @author This class was autogenerated by DaStGen
             * 		   DataStructureGenerator (DaStGen), 2007-2009,
             * 		   by Wolfgang Eckhardt
             *
             * 		   build date: 09-12-2010 17:47
             *
             * @date   21/07/2011 14:26
             */
            class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked { 
               
               public:
                  
                  typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex::InsideOutsideDomain InsideOutsideDomain;
                  
                  struct PersistentRecords {
                     double _rhs;
                     double _u;
                     tarch::la::Vector<THREE_POWER_D,double> _stencil;
                     tarch::la::Vector<DIMENSIONS,double> _x;
                     tarch::la::Vector<TWO_POWER_D,int> _adjacentRanks;
                     
                     /** mapping of records:
                     || Member 	|| startbit 	|| length
                      |  insideOutsideDomain	| startbit 0	| #bits 2
                      */
                     short int _packedRecords0;
                     
                     /**
                      * Generated
                      */
                     PersistentRecords();
                     
                     /**
                      * Generated
                      */
                     PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                     
                     /**
                      * Generated
                      */
                     double getRhs() const;
                     
                     /**
                      * Generated
                      */
                     void setRhs(const double& rhs);
                     
                     /**
                      * Generated
                      */
                     double getU() const;
                     
                     /**
                      * Generated
                      */
                     void setU(const double& u);
                     
                     /**
                      * Generated
                      */
                     tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                     
                     /**
                      * Generated
                      */
                     void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                     
                     /**
                      * Generated
                      */
                     InsideOutsideDomain getInsideOutsideDomain() const;
                     
                     /**
                      * Generated
                      */
                     void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                     
                     /**
                      * Generated
                      */
                     tarch::la::Vector<DIMENSIONS,double> getX() const;
                     
                     /**
                      * Generated
                      */
                     void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                     
                     /**
                      * Generated
                      */
                     tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                     
                     /**
                      * Generated
                      */
                     void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                     
                     
                  };
                  
               private: 
                  PersistentRecords _persistentRecords;
                  double _residual;
                  tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
                  
               public:
                  /**
                   * Generated
                   */
                  RegularGridVertexPacked();
                  
                  /**
                   * Generated
                   */
                  RegularGridVertexPacked(const PersistentRecords& persistentRecords);
                  
                  /**
                   * Generated
                   */
                  RegularGridVertexPacked(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                  
                  /**
                   * Generated
                   */
                  RegularGridVertexPacked(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                  
                  /**
                   * Generated
                   */
                  virtual ~RegularGridVertexPacked();
                  
                  /**
                   * Generated
                   */
                  double getRhs() const;
                  
                  /**
                   * Generated
                   */
                  void setRhs(const double& rhs);
                  
                  /**
                   * Generated
                   */
                  double getU() const;
                  
                  /**
                   * Generated
                   */
                  void setU(const double& u);
                  
                  /**
                   * Generated
                   */
                  double getResidual() const;
                  
                  /**
                   * Generated
                   */
                  void setResidual(const double& residual);
                  
                  /**
                   * Generated
                   */
                  tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                  
                  /**
                   * Generated
                   */
                  void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                  
                  /**
                   * Generated
                   */
                  double getStencil(int elementIndex) const;
                  
                  /**
                   * Generated
                   */
                  void setStencil(int elementIndex, const double& stencil);
                  
                  /**
                   * Generated
                   */
                  tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
                  
                  /**
                   * Generated
                   */
                  void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
                  
                  /**
                   * Generated
                   */
                  double getLinearSurplus(int elementIndex) const;
                  
                  /**
                   * Generated
                   */
                  void setLinearSurplus(int elementIndex, const double& linearSurplus);
                  
                  /**
                   * Generated
                   */
                  InsideOutsideDomain getInsideOutsideDomain() const;
                  
                  /**
                   * Generated
                   */
                  void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                  
                  /**
                   * Generated
                   */
                  tarch::la::Vector<DIMENSIONS,double> getX() const;
                  
                  /**
                   * Generated
                   */
                  void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                  
                  /**
                   * Generated
                   */
                  double getX(int elementIndex) const;
                  
                  /**
                   * Generated
                   */
                  void setX(int elementIndex, const double& x);
                  
                  /**
                   * Generated
                   */
                  tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                  
                  /**
                   * Generated
                   */
                  void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                  
                  /**
                   * Generated
                   */
                  int getAdjacentRanks(int elementIndex) const;
                  
                  /**
                   * Generated
                   */
                  void setAdjacentRanks(int elementIndex, const int& adjacentRanks);
                  
                  /**
                   * Generated
                   */
                  static std::string toString(const InsideOutsideDomain& param);
                  
                  /**
                   * Generated
                   */
                  static std::string getInsideOutsideDomainMapping();
                  
                  /**
                   * Generated
                   */
                  std::string toString() const;
                  
                  /**
                   * Generated
                   */
                  void toString(std::ostream& out) const;
                  
                  
                  PersistentRecords getPersistentRecords() const;
                  /**
                   * Generated
                   */
                  RegularGridVertex convert() const;
                  
                  
               #ifdef Parallel
                  protected:
                     static tarch::logging::Log _log;
                     
                     int _senderRank;
                     
                  public:
                     
                     /**
                      * Global that represents the mpi datatype.
                      */
                     static MPI_Datatype Datatype;
                     
                     /**
                      * Initializes the data type for the mpi operations. Has to be called
                      * before the very first send or receive operation is called.
                      */
                     static void initDatatype();
                     
                     static void shutdownDatatype();
                     
                     void send(int destination, int tag);
                     
                     void receive(int source, int tag);
                     
                     static bool isMessageInQueue(int tag);
                     
                     int getSenderRank() const;
                     
               #endif
                  
               };
               
               
            
         #elif defined(Parallel) && defined(Debug) && !defined(Asserts)
            /**
             * @author This class was autogenerated by DaStGen
             * 		   DataStructureGenerator (DaStGen), 2007-2009,
             * 		   by Wolfgang Eckhardt
             *
             * 		   build date: 09-12-2010 17:47
             *
             * @date   21/07/2011 14:26
             */
            class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex { 
               
               public:
                  
                  typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked Packed;
                  
                  enum InsideOutsideDomain {
                     Inside = 0, Boundary = 1, Outside = 2
                  };
                  
                  struct PersistentRecords {
                     double _rhs;
                     double _u;
                     tarch::la::Vector<THREE_POWER_D,double> _stencil;
                     InsideOutsideDomain _insideOutsideDomain;
                     tarch::la::Vector<DIMENSIONS,double> _x;
                     tarch::la::Vector<TWO_POWER_D,int> _adjacentRanks;
                     /**
                      * Generated
                      */
                     PersistentRecords();
                     
                     /**
                      * Generated
                      */
                     PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                     
                     /**
                      * Generated
                      */
                     double getRhs() const;
                     
                     /**
                      * Generated
                      */
                     void setRhs(const double& rhs);
                     
                     /**
                      * Generated
                      */
                     double getU() const;
                     
                     /**
                      * Generated
                      */
                     void setU(const double& u);
                     
                     /**
                      * Generated
                      */
                     tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                     
                     /**
                      * Generated
                      */
                     void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                     
                     /**
                      * Generated
                      */
                     InsideOutsideDomain getInsideOutsideDomain() const;
                     
                     /**
                      * Generated
                      */
                     void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                     
                     /**
                      * Generated
                      */
                     tarch::la::Vector<DIMENSIONS,double> getX() const;
                     
                     /**
                      * Generated
                      */
                     void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                     
                     /**
                      * Generated
                      */
                     tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                     
                     /**
                      * Generated
                      */
                     void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                     
                     
                  };
                  
               private: 
                  PersistentRecords _persistentRecords;
                  double _residual;
                  tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
                  
               public:
                  /**
                   * Generated
                   */
                  RegularGridVertex();
                  
                  /**
                   * Generated
                   */
                  RegularGridVertex(const PersistentRecords& persistentRecords);
                  
                  /**
                   * Generated
                   */
                  RegularGridVertex(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                  
                  /**
                   * Generated
                   */
                  RegularGridVertex(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                  
                  /**
                   * Generated
                   */
                  virtual ~RegularGridVertex();
                  
                  /**
                   * Generated
                   */
                  double getRhs() const;
                  
                  /**
                   * Generated
                   */
                  void setRhs(const double& rhs);
                  
                  /**
                   * Generated
                   */
                  double getU() const;
                  
                  /**
                   * Generated
                   */
                  void setU(const double& u);
                  
                  /**
                   * Generated
                   */
                  double getResidual() const;
                  
                  /**
                   * Generated
                   */
                  void setResidual(const double& residual);
                  
                  /**
                   * Generated
                   */
                  tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                  
                  /**
                   * Generated
                   */
                  void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                  
                  /**
                   * Generated
                   */
                  double getStencil(int elementIndex) const;
                  
                  /**
                   * Generated
                   */
                  void setStencil(int elementIndex, const double& stencil);
                  
                  /**
                   * Generated
                   */
                  tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
                  
                  /**
                   * Generated
                   */
                  void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
                  
                  /**
                   * Generated
                   */
                  double getLinearSurplus(int elementIndex) const;
                  
                  /**
                   * Generated
                   */
                  void setLinearSurplus(int elementIndex, const double& linearSurplus);
                  
                  /**
                   * Generated
                   */
                  InsideOutsideDomain getInsideOutsideDomain() const;
                  
                  /**
                   * Generated
                   */
                  void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                  
                  /**
                   * Generated
                   */
                  tarch::la::Vector<DIMENSIONS,double> getX() const;
                  
                  /**
                   * Generated
                   */
                  void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                  
                  /**
                   * Generated
                   */
                  double getX(int elementIndex) const;
                  
                  /**
                   * Generated
                   */
                  void setX(int elementIndex, const double& x);
                  
                  /**
                   * Generated
                   */
                  tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                  
                  /**
                   * Generated
                   */
                  void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                  
                  /**
                   * Generated
                   */
                  int getAdjacentRanks(int elementIndex) const;
                  
                  /**
                   * Generated
                   */
                  void setAdjacentRanks(int elementIndex, const int& adjacentRanks);
                  
                  /**
                   * Generated
                   */
                  static std::string toString(const InsideOutsideDomain& param);
                  
                  /**
                   * Generated
                   */
                  static std::string getInsideOutsideDomainMapping();
                  
                  /**
                   * Generated
                   */
                  std::string toString() const;
                  
                  /**
                   * Generated
                   */
                  void toString(std::ostream& out) const;
                  
                  
                  PersistentRecords getPersistentRecords() const;
                  /**
                   * Generated
                   */
                  RegularGridVertexPacked convert() const;
                  
                  
               #ifdef Parallel
                  protected:
                     static tarch::logging::Log _log;
                     
                     int _senderRank;
                     
                  public:
                     
                     /**
                      * Global that represents the mpi datatype.
                      */
                     static MPI_Datatype Datatype;
                     
                     /**
                      * Initializes the data type for the mpi operations. Has to be called
                      * before the very first send or receive operation is called.
                      */
                     static void initDatatype();
                     
                     static void shutdownDatatype();
                     
                     void send(int destination, int tag);
                     
                     void receive(int source, int tag);
                     
                     static bool isMessageInQueue(int tag);
                     
                     int getSenderRank() const;
                     
               #endif
                  
               };
               
               /**
                * @author This class was autogenerated by DaStGen
                * 		   DataStructureGenerator (DaStGen), 2007-2009,
                * 		   by Wolfgang Eckhardt
                *
                * 		   build date: 09-12-2010 17:47
                *
                * @date   21/07/2011 14:26
                */
               class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked { 
                  
                  public:
                     
                     typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex::InsideOutsideDomain InsideOutsideDomain;
                     
                     struct PersistentRecords {
                        double _rhs;
                        double _u;
                        tarch::la::Vector<THREE_POWER_D,double> _stencil;
                        tarch::la::Vector<DIMENSIONS,double> _x;
                        tarch::la::Vector<TWO_POWER_D,int> _adjacentRanks;
                        
                        /** mapping of records:
                        || Member 	|| startbit 	|| length
                         |  insideOutsideDomain	| startbit 0	| #bits 2
                         */
                        short int _packedRecords0;
                        
                        /**
                         * Generated
                         */
                        PersistentRecords();
                        
                        /**
                         * Generated
                         */
                        PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                        
                        /**
                         * Generated
                         */
                        double getRhs() const;
                        
                        /**
                         * Generated
                         */
                        void setRhs(const double& rhs);
                        
                        /**
                         * Generated
                         */
                        double getU() const;
                        
                        /**
                         * Generated
                         */
                        void setU(const double& u);
                        
                        /**
                         * Generated
                         */
                        tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                        
                        /**
                         * Generated
                         */
                        void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                        
                        /**
                         * Generated
                         */
                        InsideOutsideDomain getInsideOutsideDomain() const;
                        
                        /**
                         * Generated
                         */
                        void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                        
                        /**
                         * Generated
                         */
                        tarch::la::Vector<DIMENSIONS,double> getX() const;
                        
                        /**
                         * Generated
                         */
                        void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                        
                        /**
                         * Generated
                         */
                        tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                        
                        /**
                         * Generated
                         */
                        void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                        
                        
                     };
                     
                  private: 
                     PersistentRecords _persistentRecords;
                     double _residual;
                     tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
                     
                  public:
                     /**
                      * Generated
                      */
                     RegularGridVertexPacked();
                     
                     /**
                      * Generated
                      */
                     RegularGridVertexPacked(const PersistentRecords& persistentRecords);
                     
                     /**
                      * Generated
                      */
                     RegularGridVertexPacked(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                     
                     /**
                      * Generated
                      */
                     RegularGridVertexPacked(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                     
                     /**
                      * Generated
                      */
                     virtual ~RegularGridVertexPacked();
                     
                     /**
                      * Generated
                      */
                     double getRhs() const;
                     
                     /**
                      * Generated
                      */
                     void setRhs(const double& rhs);
                     
                     /**
                      * Generated
                      */
                     double getU() const;
                     
                     /**
                      * Generated
                      */
                     void setU(const double& u);
                     
                     /**
                      * Generated
                      */
                     double getResidual() const;
                     
                     /**
                      * Generated
                      */
                     void setResidual(const double& residual);
                     
                     /**
                      * Generated
                      */
                     tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                     
                     /**
                      * Generated
                      */
                     void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                     
                     /**
                      * Generated
                      */
                     double getStencil(int elementIndex) const;
                     
                     /**
                      * Generated
                      */
                     void setStencil(int elementIndex, const double& stencil);
                     
                     /**
                      * Generated
                      */
                     tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
                     
                     /**
                      * Generated
                      */
                     void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
                     
                     /**
                      * Generated
                      */
                     double getLinearSurplus(int elementIndex) const;
                     
                     /**
                      * Generated
                      */
                     void setLinearSurplus(int elementIndex, const double& linearSurplus);
                     
                     /**
                      * Generated
                      */
                     InsideOutsideDomain getInsideOutsideDomain() const;
                     
                     /**
                      * Generated
                      */
                     void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                     
                     /**
                      * Generated
                      */
                     tarch::la::Vector<DIMENSIONS,double> getX() const;
                     
                     /**
                      * Generated
                      */
                     void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                     
                     /**
                      * Generated
                      */
                     double getX(int elementIndex) const;
                     
                     /**
                      * Generated
                      */
                     void setX(int elementIndex, const double& x);
                     
                     /**
                      * Generated
                      */
                     tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                     
                     /**
                      * Generated
                      */
                     void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                     
                     /**
                      * Generated
                      */
                     int getAdjacentRanks(int elementIndex) const;
                     
                     /**
                      * Generated
                      */
                     void setAdjacentRanks(int elementIndex, const int& adjacentRanks);
                     
                     /**
                      * Generated
                      */
                     static std::string toString(const InsideOutsideDomain& param);
                     
                     /**
                      * Generated
                      */
                     static std::string getInsideOutsideDomainMapping();
                     
                     /**
                      * Generated
                      */
                     std::string toString() const;
                     
                     /**
                      * Generated
                      */
                     void toString(std::ostream& out) const;
                     
                     
                     PersistentRecords getPersistentRecords() const;
                     /**
                      * Generated
                      */
                     RegularGridVertex convert() const;
                     
                     
                  #ifdef Parallel
                     protected:
                        static tarch::logging::Log _log;
                        
                        int _senderRank;
                        
                     public:
                        
                        /**
                         * Global that represents the mpi datatype.
                         */
                        static MPI_Datatype Datatype;
                        
                        /**
                         * Initializes the data type for the mpi operations. Has to be called
                         * before the very first send or receive operation is called.
                         */
                        static void initDatatype();
                        
                        static void shutdownDatatype();
                        
                        void send(int destination, int tag);
                        
                        void receive(int source, int tag);
                        
                        static bool isMessageInQueue(int tag);
                        
                        int getSenderRank() const;
                        
                  #endif
                     
                  };
                  
                  
               
            #elif defined(Parallel) && !defined(Debug) && defined(Asserts)
               /**
                * @author This class was autogenerated by DaStGen
                * 		   DataStructureGenerator (DaStGen), 2007-2009,
                * 		   by Wolfgang Eckhardt
                *
                * 		   build date: 09-12-2010 17:47
                *
                * @date   21/07/2011 14:26
                */
               class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex { 
                  
                  public:
                     
                     typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked Packed;
                     
                     enum InsideOutsideDomain {
                        Inside = 0, Boundary = 1, Outside = 2
                     };
                     
                     struct PersistentRecords {
                        double _rhs;
                        double _u;
                        tarch::la::Vector<THREE_POWER_D,double> _stencil;
                        InsideOutsideDomain _insideOutsideDomain;
                        tarch::la::Vector<TWO_POWER_D,int> _adjacentRanks;
                        /**
                         * Generated
                         */
                        PersistentRecords();
                        
                        /**
                         * Generated
                         */
                        PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                        
                        /**
                         * Generated
                         */
                        double getRhs() const;
                        
                        /**
                         * Generated
                         */
                        void setRhs(const double& rhs);
                        
                        /**
                         * Generated
                         */
                        double getU() const;
                        
                        /**
                         * Generated
                         */
                        void setU(const double& u);
                        
                        /**
                         * Generated
                         */
                        tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                        
                        /**
                         * Generated
                         */
                        void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                        
                        /**
                         * Generated
                         */
                        InsideOutsideDomain getInsideOutsideDomain() const;
                        
                        /**
                         * Generated
                         */
                        void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                        
                        /**
                         * Generated
                         */
                        tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                        
                        /**
                         * Generated
                         */
                        void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                        
                        
                     };
                     
                  private: 
                     PersistentRecords _persistentRecords;
                     double _residual;
                     tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
                     
                  public:
                     /**
                      * Generated
                      */
                     RegularGridVertex();
                     
                     /**
                      * Generated
                      */
                     RegularGridVertex(const PersistentRecords& persistentRecords);
                     
                     /**
                      * Generated
                      */
                     RegularGridVertex(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                     
                     /**
                      * Generated
                      */
                     RegularGridVertex(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                     
                     /**
                      * Generated
                      */
                     virtual ~RegularGridVertex();
                     
                     /**
                      * Generated
                      */
                     double getRhs() const;
                     
                     /**
                      * Generated
                      */
                     void setRhs(const double& rhs);
                     
                     /**
                      * Generated
                      */
                     double getU() const;
                     
                     /**
                      * Generated
                      */
                     void setU(const double& u);
                     
                     /**
                      * Generated
                      */
                     double getResidual() const;
                     
                     /**
                      * Generated
                      */
                     void setResidual(const double& residual);
                     
                     /**
                      * Generated
                      */
                     tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                     
                     /**
                      * Generated
                      */
                     void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                     
                     /**
                      * Generated
                      */
                     double getStencil(int elementIndex) const;
                     
                     /**
                      * Generated
                      */
                     void setStencil(int elementIndex, const double& stencil);
                     
                     /**
                      * Generated
                      */
                     tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
                     
                     /**
                      * Generated
                      */
                     void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
                     
                     /**
                      * Generated
                      */
                     double getLinearSurplus(int elementIndex) const;
                     
                     /**
                      * Generated
                      */
                     void setLinearSurplus(int elementIndex, const double& linearSurplus);
                     
                     /**
                      * Generated
                      */
                     InsideOutsideDomain getInsideOutsideDomain() const;
                     
                     /**
                      * Generated
                      */
                     void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                     
                     /**
                      * Generated
                      */
                     tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                     
                     /**
                      * Generated
                      */
                     void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                     
                     /**
                      * Generated
                      */
                     int getAdjacentRanks(int elementIndex) const;
                     
                     /**
                      * Generated
                      */
                     void setAdjacentRanks(int elementIndex, const int& adjacentRanks);
                     
                     /**
                      * Generated
                      */
                     static std::string toString(const InsideOutsideDomain& param);
                     
                     /**
                      * Generated
                      */
                     static std::string getInsideOutsideDomainMapping();
                     
                     /**
                      * Generated
                      */
                     std::string toString() const;
                     
                     /**
                      * Generated
                      */
                     void toString(std::ostream& out) const;
                     
                     
                     PersistentRecords getPersistentRecords() const;
                     /**
                      * Generated
                      */
                     RegularGridVertexPacked convert() const;
                     
                     
                  #ifdef Parallel
                     protected:
                        static tarch::logging::Log _log;
                        
                        int _senderRank;
                        
                     public:
                        
                        /**
                         * Global that represents the mpi datatype.
                         */
                        static MPI_Datatype Datatype;
                        
                        /**
                         * Initializes the data type for the mpi operations. Has to be called
                         * before the very first send or receive operation is called.
                         */
                        static void initDatatype();
                        
                        static void shutdownDatatype();
                        
                        void send(int destination, int tag);
                        
                        void receive(int source, int tag);
                        
                        static bool isMessageInQueue(int tag);
                        
                        int getSenderRank() const;
                        
                  #endif
                     
                  };
                  
                  /**
                   * @author This class was autogenerated by DaStGen
                   * 		   DataStructureGenerator (DaStGen), 2007-2009,
                   * 		   by Wolfgang Eckhardt
                   *
                   * 		   build date: 09-12-2010 17:47
                   *
                   * @date   21/07/2011 14:26
                   */
                  class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked { 
                     
                     public:
                        
                        typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex::InsideOutsideDomain InsideOutsideDomain;
                        
                        struct PersistentRecords {
                           double _rhs;
                           double _u;
                           tarch::la::Vector<THREE_POWER_D,double> _stencil;
                           tarch::la::Vector<TWO_POWER_D,int> _adjacentRanks;
                           
                           /** mapping of records:
                           || Member 	|| startbit 	|| length
                            |  insideOutsideDomain	| startbit 0	| #bits 2
                            */
                           short int _packedRecords0;
                           
                           /**
                            * Generated
                            */
                           PersistentRecords();
                           
                           /**
                            * Generated
                            */
                           PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                           
                           /**
                            * Generated
                            */
                           double getRhs() const;
                           
                           /**
                            * Generated
                            */
                           void setRhs(const double& rhs);
                           
                           /**
                            * Generated
                            */
                           double getU() const;
                           
                           /**
                            * Generated
                            */
                           void setU(const double& u);
                           
                           /**
                            * Generated
                            */
                           tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                           
                           /**
                            * Generated
                            */
                           void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                           
                           /**
                            * Generated
                            */
                           InsideOutsideDomain getInsideOutsideDomain() const;
                           
                           /**
                            * Generated
                            */
                           void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                           
                           /**
                            * Generated
                            */
                           tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                           
                           /**
                            * Generated
                            */
                           void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                           
                           
                        };
                        
                     private: 
                        PersistentRecords _persistentRecords;
                        double _residual;
                        tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
                        
                     public:
                        /**
                         * Generated
                         */
                        RegularGridVertexPacked();
                        
                        /**
                         * Generated
                         */
                        RegularGridVertexPacked(const PersistentRecords& persistentRecords);
                        
                        /**
                         * Generated
                         */
                        RegularGridVertexPacked(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                        
                        /**
                         * Generated
                         */
                        RegularGridVertexPacked(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                        
                        /**
                         * Generated
                         */
                        virtual ~RegularGridVertexPacked();
                        
                        /**
                         * Generated
                         */
                        double getRhs() const;
                        
                        /**
                         * Generated
                         */
                        void setRhs(const double& rhs);
                        
                        /**
                         * Generated
                         */
                        double getU() const;
                        
                        /**
                         * Generated
                         */
                        void setU(const double& u);
                        
                        /**
                         * Generated
                         */
                        double getResidual() const;
                        
                        /**
                         * Generated
                         */
                        void setResidual(const double& residual);
                        
                        /**
                         * Generated
                         */
                        tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                        
                        /**
                         * Generated
                         */
                        void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                        
                        /**
                         * Generated
                         */
                        double getStencil(int elementIndex) const;
                        
                        /**
                         * Generated
                         */
                        void setStencil(int elementIndex, const double& stencil);
                        
                        /**
                         * Generated
                         */
                        tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
                        
                        /**
                         * Generated
                         */
                        void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
                        
                        /**
                         * Generated
                         */
                        double getLinearSurplus(int elementIndex) const;
                        
                        /**
                         * Generated
                         */
                        void setLinearSurplus(int elementIndex, const double& linearSurplus);
                        
                        /**
                         * Generated
                         */
                        InsideOutsideDomain getInsideOutsideDomain() const;
                        
                        /**
                         * Generated
                         */
                        void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                        
                        /**
                         * Generated
                         */
                        tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                        
                        /**
                         * Generated
                         */
                        void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                        
                        /**
                         * Generated
                         */
                        int getAdjacentRanks(int elementIndex) const;
                        
                        /**
                         * Generated
                         */
                        void setAdjacentRanks(int elementIndex, const int& adjacentRanks);
                        
                        /**
                         * Generated
                         */
                        static std::string toString(const InsideOutsideDomain& param);
                        
                        /**
                         * Generated
                         */
                        static std::string getInsideOutsideDomainMapping();
                        
                        /**
                         * Generated
                         */
                        std::string toString() const;
                        
                        /**
                         * Generated
                         */
                        void toString(std::ostream& out) const;
                        
                        
                        PersistentRecords getPersistentRecords() const;
                        /**
                         * Generated
                         */
                        RegularGridVertex convert() const;
                        
                        
                     #ifdef Parallel
                        protected:
                           static tarch::logging::Log _log;
                           
                           int _senderRank;
                           
                        public:
                           
                           /**
                            * Global that represents the mpi datatype.
                            */
                           static MPI_Datatype Datatype;
                           
                           /**
                            * Initializes the data type for the mpi operations. Has to be called
                            * before the very first send or receive operation is called.
                            */
                           static void initDatatype();
                           
                           static void shutdownDatatype();
                           
                           void send(int destination, int tag);
                           
                           void receive(int source, int tag);
                           
                           static bool isMessageInQueue(int tag);
                           
                           int getSenderRank() const;
                           
                     #endif
                        
                     };
                     
                     
                  
               #elif !defined(Parallel) && defined(Asserts) && defined(Debug)
                  /**
                   * @author This class was autogenerated by DaStGen
                   * 		   DataStructureGenerator (DaStGen), 2007-2009,
                   * 		   by Wolfgang Eckhardt
                   *
                   * 		   build date: 09-12-2010 17:47
                   *
                   * @date   21/07/2011 14:26
                   */
                  class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex { 
                     
                     public:
                        
                        typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked Packed;
                        
                        enum InsideOutsideDomain {
                           Inside = 0, Boundary = 1, Outside = 2
                        };
                        
                        struct PersistentRecords {
                           double _rhs;
                           double _u;
                           tarch::la::Vector<THREE_POWER_D,double> _stencil;
                           InsideOutsideDomain _insideOutsideDomain;
                           tarch::la::Vector<DIMENSIONS,double> _x;
                           /**
                            * Generated
                            */
                           PersistentRecords();
                           
                           /**
                            * Generated
                            */
                           PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x);
                           
                           /**
                            * Generated
                            */
                           double getRhs() const;
                           
                           /**
                            * Generated
                            */
                           void setRhs(const double& rhs);
                           
                           /**
                            * Generated
                            */
                           double getU() const;
                           
                           /**
                            * Generated
                            */
                           void setU(const double& u);
                           
                           /**
                            * Generated
                            */
                           tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                           
                           /**
                            * Generated
                            */
                           void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                           
                           /**
                            * Generated
                            */
                           InsideOutsideDomain getInsideOutsideDomain() const;
                           
                           /**
                            * Generated
                            */
                           void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                           
                           /**
                            * Generated
                            */
                           tarch::la::Vector<DIMENSIONS,double> getX() const;
                           
                           /**
                            * Generated
                            */
                           void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                           
                           
                        };
                        
                     private: 
                        PersistentRecords _persistentRecords;
                        double _residual;
                        tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
                        
                     public:
                        /**
                         * Generated
                         */
                        RegularGridVertex();
                        
                        /**
                         * Generated
                         */
                        RegularGridVertex(const PersistentRecords& persistentRecords);
                        
                        /**
                         * Generated
                         */
                        RegularGridVertex(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x);
                        
                        /**
                         * Generated
                         */
                        RegularGridVertex(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x);
                        
                        /**
                         * Generated
                         */
                        virtual ~RegularGridVertex();
                        
                        /**
                         * Generated
                         */
                        double getRhs() const;
                        
                        /**
                         * Generated
                         */
                        void setRhs(const double& rhs);
                        
                        /**
                         * Generated
                         */
                        double getU() const;
                        
                        /**
                         * Generated
                         */
                        void setU(const double& u);
                        
                        /**
                         * Generated
                         */
                        double getResidual() const;
                        
                        /**
                         * Generated
                         */
                        void setResidual(const double& residual);
                        
                        /**
                         * Generated
                         */
                        tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                        
                        /**
                         * Generated
                         */
                        void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                        
                        /**
                         * Generated
                         */
                        double getStencil(int elementIndex) const;
                        
                        /**
                         * Generated
                         */
                        void setStencil(int elementIndex, const double& stencil);
                        
                        /**
                         * Generated
                         */
                        tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
                        
                        /**
                         * Generated
                         */
                        void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
                        
                        /**
                         * Generated
                         */
                        double getLinearSurplus(int elementIndex) const;
                        
                        /**
                         * Generated
                         */
                        void setLinearSurplus(int elementIndex, const double& linearSurplus);
                        
                        /**
                         * Generated
                         */
                        InsideOutsideDomain getInsideOutsideDomain() const;
                        
                        /**
                         * Generated
                         */
                        void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                        
                        /**
                         * Generated
                         */
                        tarch::la::Vector<DIMENSIONS,double> getX() const;
                        
                        /**
                         * Generated
                         */
                        void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                        
                        /**
                         * Generated
                         */
                        double getX(int elementIndex) const;
                        
                        /**
                         * Generated
                         */
                        void setX(int elementIndex, const double& x);
                        
                        /**
                         * Generated
                         */
                        static std::string toString(const InsideOutsideDomain& param);
                        
                        /**
                         * Generated
                         */
                        static std::string getInsideOutsideDomainMapping();
                        
                        /**
                         * Generated
                         */
                        std::string toString() const;
                        
                        /**
                         * Generated
                         */
                        void toString(std::ostream& out) const;
                        
                        
                        PersistentRecords getPersistentRecords() const;
                        /**
                         * Generated
                         */
                        RegularGridVertexPacked convert() const;
                        
                        
                     #ifdef Parallel
                        protected:
                           static tarch::logging::Log _log;
                           
                           int _senderRank;
                           
                        public:
                           
                           /**
                            * Global that represents the mpi datatype.
                            */
                           static MPI_Datatype Datatype;
                           
                           /**
                            * Initializes the data type for the mpi operations. Has to be called
                            * before the very first send or receive operation is called.
                            */
                           static void initDatatype();
                           
                           static void shutdownDatatype();
                           
                           void send(int destination, int tag);
                           
                           void receive(int source, int tag);
                           
                           static bool isMessageInQueue(int tag);
                           
                           int getSenderRank() const;
                           
                     #endif
                        
                     };
                     
                     /**
                      * @author This class was autogenerated by DaStGen
                      * 		   DataStructureGenerator (DaStGen), 2007-2009,
                      * 		   by Wolfgang Eckhardt
                      *
                      * 		   build date: 09-12-2010 17:47
                      *
                      * @date   21/07/2011 14:26
                      */
                     class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked { 
                        
                        public:
                           
                           typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex::InsideOutsideDomain InsideOutsideDomain;
                           
                           struct PersistentRecords {
                              double _rhs;
                              double _u;
                              tarch::la::Vector<THREE_POWER_D,double> _stencil;
                              tarch::la::Vector<DIMENSIONS,double> _x;
                              
                              /** mapping of records:
                              || Member 	|| startbit 	|| length
                               |  insideOutsideDomain	| startbit 0	| #bits 2
                               */
                              short int _packedRecords0;
                              
                              /**
                               * Generated
                               */
                              PersistentRecords();
                              
                              /**
                               * Generated
                               */
                              PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x);
                              
                              /**
                               * Generated
                               */
                              double getRhs() const;
                              
                              /**
                               * Generated
                               */
                              void setRhs(const double& rhs);
                              
                              /**
                               * Generated
                               */
                              double getU() const;
                              
                              /**
                               * Generated
                               */
                              void setU(const double& u);
                              
                              /**
                               * Generated
                               */
                              tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                              
                              /**
                               * Generated
                               */
                              void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                              
                              /**
                               * Generated
                               */
                              InsideOutsideDomain getInsideOutsideDomain() const;
                              
                              /**
                               * Generated
                               */
                              void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                              
                              /**
                               * Generated
                               */
                              tarch::la::Vector<DIMENSIONS,double> getX() const;
                              
                              /**
                               * Generated
                               */
                              void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                              
                              
                           };
                           
                        private: 
                           PersistentRecords _persistentRecords;
                           double _residual;
                           tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
                           
                        public:
                           /**
                            * Generated
                            */
                           RegularGridVertexPacked();
                           
                           /**
                            * Generated
                            */
                           RegularGridVertexPacked(const PersistentRecords& persistentRecords);
                           
                           /**
                            * Generated
                            */
                           RegularGridVertexPacked(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x);
                           
                           /**
                            * Generated
                            */
                           RegularGridVertexPacked(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x);
                           
                           /**
                            * Generated
                            */
                           virtual ~RegularGridVertexPacked();
                           
                           /**
                            * Generated
                            */
                           double getRhs() const;
                           
                           /**
                            * Generated
                            */
                           void setRhs(const double& rhs);
                           
                           /**
                            * Generated
                            */
                           double getU() const;
                           
                           /**
                            * Generated
                            */
                           void setU(const double& u);
                           
                           /**
                            * Generated
                            */
                           double getResidual() const;
                           
                           /**
                            * Generated
                            */
                           void setResidual(const double& residual);
                           
                           /**
                            * Generated
                            */
                           tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                           
                           /**
                            * Generated
                            */
                           void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                           
                           /**
                            * Generated
                            */
                           double getStencil(int elementIndex) const;
                           
                           /**
                            * Generated
                            */
                           void setStencil(int elementIndex, const double& stencil);
                           
                           /**
                            * Generated
                            */
                           tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
                           
                           /**
                            * Generated
                            */
                           void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
                           
                           /**
                            * Generated
                            */
                           double getLinearSurplus(int elementIndex) const;
                           
                           /**
                            * Generated
                            */
                           void setLinearSurplus(int elementIndex, const double& linearSurplus);
                           
                           /**
                            * Generated
                            */
                           InsideOutsideDomain getInsideOutsideDomain() const;
                           
                           /**
                            * Generated
                            */
                           void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                           
                           /**
                            * Generated
                            */
                           tarch::la::Vector<DIMENSIONS,double> getX() const;
                           
                           /**
                            * Generated
                            */
                           void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                           
                           /**
                            * Generated
                            */
                           double getX(int elementIndex) const;
                           
                           /**
                            * Generated
                            */
                           void setX(int elementIndex, const double& x);
                           
                           /**
                            * Generated
                            */
                           static std::string toString(const InsideOutsideDomain& param);
                           
                           /**
                            * Generated
                            */
                           static std::string getInsideOutsideDomainMapping();
                           
                           /**
                            * Generated
                            */
                           std::string toString() const;
                           
                           /**
                            * Generated
                            */
                           void toString(std::ostream& out) const;
                           
                           
                           PersistentRecords getPersistentRecords() const;
                           /**
                            * Generated
                            */
                           RegularGridVertex convert() const;
                           
                           
                        #ifdef Parallel
                           protected:
                              static tarch::logging::Log _log;
                              
                              int _senderRank;
                              
                           public:
                              
                              /**
                               * Global that represents the mpi datatype.
                               */
                              static MPI_Datatype Datatype;
                              
                              /**
                               * Initializes the data type for the mpi operations. Has to be called
                               * before the very first send or receive operation is called.
                               */
                              static void initDatatype();
                              
                              static void shutdownDatatype();
                              
                              void send(int destination, int tag);
                              
                              void receive(int source, int tag);
                              
                              static bool isMessageInQueue(int tag);
                              
                              int getSenderRank() const;
                              
                        #endif
                           
                        };
                        
                        
                     
                  #elif !defined(Debug) && !defined(Parallel) && defined(Asserts)
                     /**
                      * @author This class was autogenerated by DaStGen
                      * 		   DataStructureGenerator (DaStGen), 2007-2009,
                      * 		   by Wolfgang Eckhardt
                      *
                      * 		   build date: 09-12-2010 17:47
                      *
                      * @date   21/07/2011 14:26
                      */
                     class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex { 
                        
                        public:
                           
                           typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked Packed;
                           
                           enum InsideOutsideDomain {
                              Inside = 0, Boundary = 1, Outside = 2
                           };
                           
                           struct PersistentRecords {
                              double _rhs;
                              double _u;
                              tarch::la::Vector<THREE_POWER_D,double> _stencil;
                              InsideOutsideDomain _insideOutsideDomain;
                              /**
                               * Generated
                               */
                              PersistentRecords();
                              
                              /**
                               * Generated
                               */
                              PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain);
                              
                              /**
                               * Generated
                               */
                              double getRhs() const;
                              
                              /**
                               * Generated
                               */
                              void setRhs(const double& rhs);
                              
                              /**
                               * Generated
                               */
                              double getU() const;
                              
                              /**
                               * Generated
                               */
                              void setU(const double& u);
                              
                              /**
                               * Generated
                               */
                              tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                              
                              /**
                               * Generated
                               */
                              void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                              
                              /**
                               * Generated
                               */
                              InsideOutsideDomain getInsideOutsideDomain() const;
                              
                              /**
                               * Generated
                               */
                              void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                              
                              
                           };
                           
                        private: 
                           PersistentRecords _persistentRecords;
                           double _residual;
                           tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
                           
                        public:
                           /**
                            * Generated
                            */
                           RegularGridVertex();
                           
                           /**
                            * Generated
                            */
                           RegularGridVertex(const PersistentRecords& persistentRecords);
                           
                           /**
                            * Generated
                            */
                           RegularGridVertex(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain);
                           
                           /**
                            * Generated
                            */
                           RegularGridVertex(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain);
                           
                           /**
                            * Generated
                            */
                           virtual ~RegularGridVertex();
                           
                           /**
                            * Generated
                            */
                           double getRhs() const;
                           
                           /**
                            * Generated
                            */
                           void setRhs(const double& rhs);
                           
                           /**
                            * Generated
                            */
                           double getU() const;
                           
                           /**
                            * Generated
                            */
                           void setU(const double& u);
                           
                           /**
                            * Generated
                            */
                           double getResidual() const;
                           
                           /**
                            * Generated
                            */
                           void setResidual(const double& residual);
                           
                           /**
                            * Generated
                            */
                           tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                           
                           /**
                            * Generated
                            */
                           void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                           
                           /**
                            * Generated
                            */
                           double getStencil(int elementIndex) const;
                           
                           /**
                            * Generated
                            */
                           void setStencil(int elementIndex, const double& stencil);
                           
                           /**
                            * Generated
                            */
                           tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
                           
                           /**
                            * Generated
                            */
                           void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
                           
                           /**
                            * Generated
                            */
                           double getLinearSurplus(int elementIndex) const;
                           
                           /**
                            * Generated
                            */
                           void setLinearSurplus(int elementIndex, const double& linearSurplus);
                           
                           /**
                            * Generated
                            */
                           InsideOutsideDomain getInsideOutsideDomain() const;
                           
                           /**
                            * Generated
                            */
                           void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                           
                           /**
                            * Generated
                            */
                           static std::string toString(const InsideOutsideDomain& param);
                           
                           /**
                            * Generated
                            */
                           static std::string getInsideOutsideDomainMapping();
                           
                           /**
                            * Generated
                            */
                           std::string toString() const;
                           
                           /**
                            * Generated
                            */
                           void toString(std::ostream& out) const;
                           
                           
                           PersistentRecords getPersistentRecords() const;
                           /**
                            * Generated
                            */
                           RegularGridVertexPacked convert() const;
                           
                           
                        #ifdef Parallel
                           protected:
                              static tarch::logging::Log _log;
                              
                              int _senderRank;
                              
                           public:
                              
                              /**
                               * Global that represents the mpi datatype.
                               */
                              static MPI_Datatype Datatype;
                              
                              /**
                               * Initializes the data type for the mpi operations. Has to be called
                               * before the very first send or receive operation is called.
                               */
                              static void initDatatype();
                              
                              static void shutdownDatatype();
                              
                              void send(int destination, int tag);
                              
                              void receive(int source, int tag);
                              
                              static bool isMessageInQueue(int tag);
                              
                              int getSenderRank() const;
                              
                        #endif
                           
                        };
                        
                        /**
                         * @author This class was autogenerated by DaStGen
                         * 		   DataStructureGenerator (DaStGen), 2007-2009,
                         * 		   by Wolfgang Eckhardt
                         *
                         * 		   build date: 09-12-2010 17:47
                         *
                         * @date   21/07/2011 14:26
                         */
                        class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked { 
                           
                           public:
                              
                              typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex::InsideOutsideDomain InsideOutsideDomain;
                              
                              struct PersistentRecords {
                                 double _rhs;
                                 double _u;
                                 tarch::la::Vector<THREE_POWER_D,double> _stencil;
                                 
                                 /** mapping of records:
                                 || Member 	|| startbit 	|| length
                                  |  insideOutsideDomain	| startbit 0	| #bits 2
                                  */
                                 short int _packedRecords0;
                                 
                                 /**
                                  * Generated
                                  */
                                 PersistentRecords();
                                 
                                 /**
                                  * Generated
                                  */
                                 PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain);
                                 
                                 /**
                                  * Generated
                                  */
                                 double getRhs() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setRhs(const double& rhs);
                                 
                                 /**
                                  * Generated
                                  */
                                 double getU() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setU(const double& u);
                                 
                                 /**
                                  * Generated
                                  */
                                 tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                                 
                                 /**
                                  * Generated
                                  */
                                 InsideOutsideDomain getInsideOutsideDomain() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                                 
                                 
                              };
                              
                           private: 
                              PersistentRecords _persistentRecords;
                              double _residual;
                              tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
                              
                           public:
                              /**
                               * Generated
                               */
                              RegularGridVertexPacked();
                              
                              /**
                               * Generated
                               */
                              RegularGridVertexPacked(const PersistentRecords& persistentRecords);
                              
                              /**
                               * Generated
                               */
                              RegularGridVertexPacked(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain);
                              
                              /**
                               * Generated
                               */
                              RegularGridVertexPacked(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain);
                              
                              /**
                               * Generated
                               */
                              virtual ~RegularGridVertexPacked();
                              
                              /**
                               * Generated
                               */
                              double getRhs() const;
                              
                              /**
                               * Generated
                               */
                              void setRhs(const double& rhs);
                              
                              /**
                               * Generated
                               */
                              double getU() const;
                              
                              /**
                               * Generated
                               */
                              void setU(const double& u);
                              
                              /**
                               * Generated
                               */
                              double getResidual() const;
                              
                              /**
                               * Generated
                               */
                              void setResidual(const double& residual);
                              
                              /**
                               * Generated
                               */
                              tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                              
                              /**
                               * Generated
                               */
                              void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                              
                              /**
                               * Generated
                               */
                              double getStencil(int elementIndex) const;
                              
                              /**
                               * Generated
                               */
                              void setStencil(int elementIndex, const double& stencil);
                              
                              /**
                               * Generated
                               */
                              tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
                              
                              /**
                               * Generated
                               */
                              void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
                              
                              /**
                               * Generated
                               */
                              double getLinearSurplus(int elementIndex) const;
                              
                              /**
                               * Generated
                               */
                              void setLinearSurplus(int elementIndex, const double& linearSurplus);
                              
                              /**
                               * Generated
                               */
                              InsideOutsideDomain getInsideOutsideDomain() const;
                              
                              /**
                               * Generated
                               */
                              void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                              
                              /**
                               * Generated
                               */
                              static std::string toString(const InsideOutsideDomain& param);
                              
                              /**
                               * Generated
                               */
                              static std::string getInsideOutsideDomainMapping();
                              
                              /**
                               * Generated
                               */
                              std::string toString() const;
                              
                              /**
                               * Generated
                               */
                              void toString(std::ostream& out) const;
                              
                              
                              PersistentRecords getPersistentRecords() const;
                              /**
                               * Generated
                               */
                              RegularGridVertex convert() const;
                              
                              
                           #ifdef Parallel
                              protected:
                                 static tarch::logging::Log _log;
                                 
                                 int _senderRank;
                                 
                              public:
                                 
                                 /**
                                  * Global that represents the mpi datatype.
                                  */
                                 static MPI_Datatype Datatype;
                                 
                                 /**
                                  * Initializes the data type for the mpi operations. Has to be called
                                  * before the very first send or receive operation is called.
                                  */
                                 static void initDatatype();
                                 
                                 static void shutdownDatatype();
                                 
                                 void send(int destination, int tag);
                                 
                                 void receive(int source, int tag);
                                 
                                 static bool isMessageInQueue(int tag);
                                 
                                 int getSenderRank() const;
                                 
                           #endif
                              
                           };
                           
                           
                        
                     #elif !defined(Parallel) && defined(Debug) && !defined(Asserts)
                        /**
                         * @author This class was autogenerated by DaStGen
                         * 		   DataStructureGenerator (DaStGen), 2007-2009,
                         * 		   by Wolfgang Eckhardt
                         *
                         * 		   build date: 09-12-2010 17:47
                         *
                         * @date   21/07/2011 14:26
                         */
                        class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex { 
                           
                           public:
                              
                              typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked Packed;
                              
                              enum InsideOutsideDomain {
                                 Inside = 0, Boundary = 1, Outside = 2
                              };
                              
                              struct PersistentRecords {
                                 double _rhs;
                                 double _u;
                                 tarch::la::Vector<THREE_POWER_D,double> _stencil;
                                 InsideOutsideDomain _insideOutsideDomain;
                                 tarch::la::Vector<DIMENSIONS,double> _x;
                                 /**
                                  * Generated
                                  */
                                 PersistentRecords();
                                 
                                 /**
                                  * Generated
                                  */
                                 PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x);
                                 
                                 /**
                                  * Generated
                                  */
                                 double getRhs() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setRhs(const double& rhs);
                                 
                                 /**
                                  * Generated
                                  */
                                 double getU() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setU(const double& u);
                                 
                                 /**
                                  * Generated
                                  */
                                 tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                                 
                                 /**
                                  * Generated
                                  */
                                 InsideOutsideDomain getInsideOutsideDomain() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                                 
                                 /**
                                  * Generated
                                  */
                                 tarch::la::Vector<DIMENSIONS,double> getX() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                                 
                                 
                              };
                              
                           private: 
                              PersistentRecords _persistentRecords;
                              double _residual;
                              tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
                              
                           public:
                              /**
                               * Generated
                               */
                              RegularGridVertex();
                              
                              /**
                               * Generated
                               */
                              RegularGridVertex(const PersistentRecords& persistentRecords);
                              
                              /**
                               * Generated
                               */
                              RegularGridVertex(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x);
                              
                              /**
                               * Generated
                               */
                              RegularGridVertex(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x);
                              
                              /**
                               * Generated
                               */
                              virtual ~RegularGridVertex();
                              
                              /**
                               * Generated
                               */
                              double getRhs() const;
                              
                              /**
                               * Generated
                               */
                              void setRhs(const double& rhs);
                              
                              /**
                               * Generated
                               */
                              double getU() const;
                              
                              /**
                               * Generated
                               */
                              void setU(const double& u);
                              
                              /**
                               * Generated
                               */
                              double getResidual() const;
                              
                              /**
                               * Generated
                               */
                              void setResidual(const double& residual);
                              
                              /**
                               * Generated
                               */
                              tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                              
                              /**
                               * Generated
                               */
                              void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                              
                              /**
                               * Generated
                               */
                              double getStencil(int elementIndex) const;
                              
                              /**
                               * Generated
                               */
                              void setStencil(int elementIndex, const double& stencil);
                              
                              /**
                               * Generated
                               */
                              tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
                              
                              /**
                               * Generated
                               */
                              void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
                              
                              /**
                               * Generated
                               */
                              double getLinearSurplus(int elementIndex) const;
                              
                              /**
                               * Generated
                               */
                              void setLinearSurplus(int elementIndex, const double& linearSurplus);
                              
                              /**
                               * Generated
                               */
                              InsideOutsideDomain getInsideOutsideDomain() const;
                              
                              /**
                               * Generated
                               */
                              void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                              
                              /**
                               * Generated
                               */
                              tarch::la::Vector<DIMENSIONS,double> getX() const;
                              
                              /**
                               * Generated
                               */
                              void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                              
                              /**
                               * Generated
                               */
                              double getX(int elementIndex) const;
                              
                              /**
                               * Generated
                               */
                              void setX(int elementIndex, const double& x);
                              
                              /**
                               * Generated
                               */
                              static std::string toString(const InsideOutsideDomain& param);
                              
                              /**
                               * Generated
                               */
                              static std::string getInsideOutsideDomainMapping();
                              
                              /**
                               * Generated
                               */
                              std::string toString() const;
                              
                              /**
                               * Generated
                               */
                              void toString(std::ostream& out) const;
                              
                              
                              PersistentRecords getPersistentRecords() const;
                              /**
                               * Generated
                               */
                              RegularGridVertexPacked convert() const;
                              
                              
                           #ifdef Parallel
                              protected:
                                 static tarch::logging::Log _log;
                                 
                                 int _senderRank;
                                 
                              public:
                                 
                                 /**
                                  * Global that represents the mpi datatype.
                                  */
                                 static MPI_Datatype Datatype;
                                 
                                 /**
                                  * Initializes the data type for the mpi operations. Has to be called
                                  * before the very first send or receive operation is called.
                                  */
                                 static void initDatatype();
                                 
                                 static void shutdownDatatype();
                                 
                                 void send(int destination, int tag);
                                 
                                 void receive(int source, int tag);
                                 
                                 static bool isMessageInQueue(int tag);
                                 
                                 int getSenderRank() const;
                                 
                           #endif
                              
                           };
                           
                           /**
                            * @author This class was autogenerated by DaStGen
                            * 		   DataStructureGenerator (DaStGen), 2007-2009,
                            * 		   by Wolfgang Eckhardt
                            *
                            * 		   build date: 09-12-2010 17:47
                            *
                            * @date   21/07/2011 14:26
                            */
                           class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked { 
                              
                              public:
                                 
                                 typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex::InsideOutsideDomain InsideOutsideDomain;
                                 
                                 struct PersistentRecords {
                                    double _rhs;
                                    double _u;
                                    tarch::la::Vector<THREE_POWER_D,double> _stencil;
                                    tarch::la::Vector<DIMENSIONS,double> _x;
                                    
                                    /** mapping of records:
                                    || Member 	|| startbit 	|| length
                                     |  insideOutsideDomain	| startbit 0	| #bits 2
                                     */
                                    short int _packedRecords0;
                                    
                                    /**
                                     * Generated
                                     */
                                    PersistentRecords();
                                    
                                    /**
                                     * Generated
                                     */
                                    PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x);
                                    
                                    /**
                                     * Generated
                                     */
                                    double getRhs() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setRhs(const double& rhs);
                                    
                                    /**
                                     * Generated
                                     */
                                    double getU() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setU(const double& u);
                                    
                                    /**
                                     * Generated
                                     */
                                    tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                                    
                                    /**
                                     * Generated
                                     */
                                    InsideOutsideDomain getInsideOutsideDomain() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                                    
                                    /**
                                     * Generated
                                     */
                                    tarch::la::Vector<DIMENSIONS,double> getX() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                                    
                                    
                                 };
                                 
                              private: 
                                 PersistentRecords _persistentRecords;
                                 double _residual;
                                 tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
                                 
                              public:
                                 /**
                                  * Generated
                                  */
                                 RegularGridVertexPacked();
                                 
                                 /**
                                  * Generated
                                  */
                                 RegularGridVertexPacked(const PersistentRecords& persistentRecords);
                                 
                                 /**
                                  * Generated
                                  */
                                 RegularGridVertexPacked(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x);
                                 
                                 /**
                                  * Generated
                                  */
                                 RegularGridVertexPacked(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<DIMENSIONS,double>& x);
                                 
                                 /**
                                  * Generated
                                  */
                                 virtual ~RegularGridVertexPacked();
                                 
                                 /**
                                  * Generated
                                  */
                                 double getRhs() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setRhs(const double& rhs);
                                 
                                 /**
                                  * Generated
                                  */
                                 double getU() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setU(const double& u);
                                 
                                 /**
                                  * Generated
                                  */
                                 double getResidual() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setResidual(const double& residual);
                                 
                                 /**
                                  * Generated
                                  */
                                 tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                                 
                                 /**
                                  * Generated
                                  */
                                 double getStencil(int elementIndex) const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setStencil(int elementIndex, const double& stencil);
                                 
                                 /**
                                  * Generated
                                  */
                                 tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
                                 
                                 /**
                                  * Generated
                                  */
                                 double getLinearSurplus(int elementIndex) const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setLinearSurplus(int elementIndex, const double& linearSurplus);
                                 
                                 /**
                                  * Generated
                                  */
                                 InsideOutsideDomain getInsideOutsideDomain() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                                 
                                 /**
                                  * Generated
                                  */
                                 tarch::la::Vector<DIMENSIONS,double> getX() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setX(const tarch::la::Vector<DIMENSIONS,double>& x);
                                 
                                 /**
                                  * Generated
                                  */
                                 double getX(int elementIndex) const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setX(int elementIndex, const double& x);
                                 
                                 /**
                                  * Generated
                                  */
                                 static std::string toString(const InsideOutsideDomain& param);
                                 
                                 /**
                                  * Generated
                                  */
                                 static std::string getInsideOutsideDomainMapping();
                                 
                                 /**
                                  * Generated
                                  */
                                 std::string toString() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void toString(std::ostream& out) const;
                                 
                                 
                                 PersistentRecords getPersistentRecords() const;
                                 /**
                                  * Generated
                                  */
                                 RegularGridVertex convert() const;
                                 
                                 
                              #ifdef Parallel
                                 protected:
                                    static tarch::logging::Log _log;
                                    
                                    int _senderRank;
                                    
                                 public:
                                    
                                    /**
                                     * Global that represents the mpi datatype.
                                     */
                                    static MPI_Datatype Datatype;
                                    
                                    /**
                                     * Initializes the data type for the mpi operations. Has to be called
                                     * before the very first send or receive operation is called.
                                     */
                                    static void initDatatype();
                                    
                                    static void shutdownDatatype();
                                    
                                    void send(int destination, int tag);
                                    
                                    void receive(int source, int tag);
                                    
                                    static bool isMessageInQueue(int tag);
                                    
                                    int getSenderRank() const;
                                    
                              #endif
                                 
                              };
                              
                              
                           
                        #elif defined(Parallel) && !defined(Debug) && !defined(Asserts)
                           /**
                            * @author This class was autogenerated by DaStGen
                            * 		   DataStructureGenerator (DaStGen), 2007-2009,
                            * 		   by Wolfgang Eckhardt
                            *
                            * 		   build date: 09-12-2010 17:47
                            *
                            * @date   21/07/2011 14:26
                            */
                           class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex { 
                              
                              public:
                                 
                                 typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked Packed;
                                 
                                 enum InsideOutsideDomain {
                                    Inside = 0, Boundary = 1, Outside = 2
                                 };
                                 
                                 struct PersistentRecords {
                                    double _rhs;
                                    double _u;
                                    tarch::la::Vector<THREE_POWER_D,double> _stencil;
                                    InsideOutsideDomain _insideOutsideDomain;
                                    tarch::la::Vector<TWO_POWER_D,int> _adjacentRanks;
                                    /**
                                     * Generated
                                     */
                                    PersistentRecords();
                                    
                                    /**
                                     * Generated
                                     */
                                    PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                                    
                                    /**
                                     * Generated
                                     */
                                    double getRhs() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setRhs(const double& rhs);
                                    
                                    /**
                                     * Generated
                                     */
                                    double getU() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setU(const double& u);
                                    
                                    /**
                                     * Generated
                                     */
                                    tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                                    
                                    /**
                                     * Generated
                                     */
                                    InsideOutsideDomain getInsideOutsideDomain() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                                    
                                    /**
                                     * Generated
                                     */
                                    tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                                    
                                    
                                 };
                                 
                              private: 
                                 PersistentRecords _persistentRecords;
                                 double _residual;
                                 tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
                                 
                              public:
                                 /**
                                  * Generated
                                  */
                                 RegularGridVertex();
                                 
                                 /**
                                  * Generated
                                  */
                                 RegularGridVertex(const PersistentRecords& persistentRecords);
                                 
                                 /**
                                  * Generated
                                  */
                                 RegularGridVertex(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                                 
                                 /**
                                  * Generated
                                  */
                                 RegularGridVertex(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                                 
                                 /**
                                  * Generated
                                  */
                                 virtual ~RegularGridVertex();
                                 
                                 /**
                                  * Generated
                                  */
                                 double getRhs() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setRhs(const double& rhs);
                                 
                                 /**
                                  * Generated
                                  */
                                 double getU() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setU(const double& u);
                                 
                                 /**
                                  * Generated
                                  */
                                 double getResidual() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setResidual(const double& residual);
                                 
                                 /**
                                  * Generated
                                  */
                                 tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                                 
                                 /**
                                  * Generated
                                  */
                                 double getStencil(int elementIndex) const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setStencil(int elementIndex, const double& stencil);
                                 
                                 /**
                                  * Generated
                                  */
                                 tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
                                 
                                 /**
                                  * Generated
                                  */
                                 double getLinearSurplus(int elementIndex) const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setLinearSurplus(int elementIndex, const double& linearSurplus);
                                 
                                 /**
                                  * Generated
                                  */
                                 InsideOutsideDomain getInsideOutsideDomain() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                                 
                                 /**
                                  * Generated
                                  */
                                 tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                                 
                                 /**
                                  * Generated
                                  */
                                 int getAdjacentRanks(int elementIndex) const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void setAdjacentRanks(int elementIndex, const int& adjacentRanks);
                                 
                                 /**
                                  * Generated
                                  */
                                 static std::string toString(const InsideOutsideDomain& param);
                                 
                                 /**
                                  * Generated
                                  */
                                 static std::string getInsideOutsideDomainMapping();
                                 
                                 /**
                                  * Generated
                                  */
                                 std::string toString() const;
                                 
                                 /**
                                  * Generated
                                  */
                                 void toString(std::ostream& out) const;
                                 
                                 
                                 PersistentRecords getPersistentRecords() const;
                                 /**
                                  * Generated
                                  */
                                 RegularGridVertexPacked convert() const;
                                 
                                 
                              #ifdef Parallel
                                 protected:
                                    static tarch::logging::Log _log;
                                    
                                    int _senderRank;
                                    
                                 public:
                                    
                                    /**
                                     * Global that represents the mpi datatype.
                                     */
                                    static MPI_Datatype Datatype;
                                    
                                    /**
                                     * Initializes the data type for the mpi operations. Has to be called
                                     * before the very first send or receive operation is called.
                                     */
                                    static void initDatatype();
                                    
                                    static void shutdownDatatype();
                                    
                                    void send(int destination, int tag);
                                    
                                    void receive(int source, int tag);
                                    
                                    static bool isMessageInQueue(int tag);
                                    
                                    int getSenderRank() const;
                                    
                              #endif
                                 
                              };
                              
                              /**
                               * @author This class was autogenerated by DaStGen
                               * 		   DataStructureGenerator (DaStGen), 2007-2009,
                               * 		   by Wolfgang Eckhardt
                               *
                               * 		   build date: 09-12-2010 17:47
                               *
                               * @date   21/07/2011 14:26
                               */
                              class peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertexPacked { 
                                 
                                 public:
                                    
                                    typedef peano::applications::diffusionequation::explicittimestepping::records::RegularGridVertex::InsideOutsideDomain InsideOutsideDomain;
                                    
                                    struct PersistentRecords {
                                       double _rhs;
                                       double _u;
                                       tarch::la::Vector<THREE_POWER_D,double> _stencil;
                                       tarch::la::Vector<TWO_POWER_D,int> _adjacentRanks;
                                       
                                       /** mapping of records:
                                       || Member 	|| startbit 	|| length
                                        |  insideOutsideDomain	| startbit 0	| #bits 2
                                        */
                                       short int _packedRecords0;
                                       
                                       /**
                                        * Generated
                                        */
                                       PersistentRecords();
                                       
                                       /**
                                        * Generated
                                        */
                                       PersistentRecords(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                                       
                                       /**
                                        * Generated
                                        */
                                       double getRhs() const;
                                       
                                       /**
                                        * Generated
                                        */
                                       void setRhs(const double& rhs);
                                       
                                       /**
                                        * Generated
                                        */
                                       double getU() const;
                                       
                                       /**
                                        * Generated
                                        */
                                       void setU(const double& u);
                                       
                                       /**
                                        * Generated
                                        */
                                       tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                                       
                                       /**
                                        * Generated
                                        */
                                       void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                                       
                                       /**
                                        * Generated
                                        */
                                       InsideOutsideDomain getInsideOutsideDomain() const;
                                       
                                       /**
                                        * Generated
                                        */
                                       void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                                       
                                       /**
                                        * Generated
                                        */
                                       tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                                       
                                       /**
                                        * Generated
                                        */
                                       void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                                       
                                       
                                    };
                                    
                                 private: 
                                    PersistentRecords _persistentRecords;
                                    double _residual;
                                    tarch::la::Vector<DIMENSIONS,double> _linearSurplus;
                                    
                                 public:
                                    /**
                                     * Generated
                                     */
                                    RegularGridVertexPacked();
                                    
                                    /**
                                     * Generated
                                     */
                                    RegularGridVertexPacked(const PersistentRecords& persistentRecords);
                                    
                                    /**
                                     * Generated
                                     */
                                    RegularGridVertexPacked(const double& rhs, const double& u, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                                    
                                    /**
                                     * Generated
                                     */
                                    RegularGridVertexPacked(const double& rhs, const double& u, const double& residual, const tarch::la::Vector<THREE_POWER_D,double>& stencil, const tarch::la::Vector<DIMENSIONS,double>& linearSurplus, const InsideOutsideDomain& insideOutsideDomain, const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                                    
                                    /**
                                     * Generated
                                     */
                                    virtual ~RegularGridVertexPacked();
                                    
                                    /**
                                     * Generated
                                     */
                                    double getRhs() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setRhs(const double& rhs);
                                    
                                    /**
                                     * Generated
                                     */
                                    double getU() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setU(const double& u);
                                    
                                    /**
                                     * Generated
                                     */
                                    double getResidual() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setResidual(const double& residual);
                                    
                                    /**
                                     * Generated
                                     */
                                    tarch::la::Vector<THREE_POWER_D,double> getStencil() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setStencil(const tarch::la::Vector<THREE_POWER_D,double>& stencil);
                                    
                                    /**
                                     * Generated
                                     */
                                    double getStencil(int elementIndex) const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setStencil(int elementIndex, const double& stencil);
                                    
                                    /**
                                     * Generated
                                     */
                                    tarch::la::Vector<DIMENSIONS,double> getLinearSurplus() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setLinearSurplus(const tarch::la::Vector<DIMENSIONS,double>& linearSurplus);
                                    
                                    /**
                                     * Generated
                                     */
                                    double getLinearSurplus(int elementIndex) const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setLinearSurplus(int elementIndex, const double& linearSurplus);
                                    
                                    /**
                                     * Generated
                                     */
                                    InsideOutsideDomain getInsideOutsideDomain() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setInsideOutsideDomain(const InsideOutsideDomain& insideOutsideDomain);
                                    
                                    /**
                                     * Generated
                                     */
                                    tarch::la::Vector<TWO_POWER_D,int> getAdjacentRanks() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setAdjacentRanks(const tarch::la::Vector<TWO_POWER_D,int>& adjacentRanks);
                                    
                                    /**
                                     * Generated
                                     */
                                    int getAdjacentRanks(int elementIndex) const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void setAdjacentRanks(int elementIndex, const int& adjacentRanks);
                                    
                                    /**
                                     * Generated
                                     */
                                    static std::string toString(const InsideOutsideDomain& param);
                                    
                                    /**
                                     * Generated
                                     */
                                    static std::string getInsideOutsideDomainMapping();
                                    
                                    /**
                                     * Generated
                                     */
                                    std::string toString() const;
                                    
                                    /**
                                     * Generated
                                     */
                                    void toString(std::ostream& out) const;
                                    
                                    
                                    PersistentRecords getPersistentRecords() const;
                                    /**
                                     * Generated
                                     */
                                    RegularGridVertex convert() const;
                                    
                                    
                                 #ifdef Parallel
                                    protected:
                                       static tarch::logging::Log _log;
                                       
                                       int _senderRank;
                                       
                                    public:
                                       
                                       /**
                                        * Global that represents the mpi datatype.
                                        */
                                       static MPI_Datatype Datatype;
                                       
                                       /**
                                        * Initializes the data type for the mpi operations. Has to be called
                                        * before the very first send or receive operation is called.
                                        */
                                       static void initDatatype();
                                       
                                       static void shutdownDatatype();
                                       
                                       void send(int destination, int tag);
                                       
                                       void receive(int source, int tag);
                                       
                                       static bool isMessageInQueue(int tag);
                                       
                                       int getSenderRank() const;
                                       
                                 #endif
                                    
                                 };
                                 
                                 
                              
                           #endif
                           
                           #endif
                           
