# This is a makefile for Peano's Navierstokes component
# generated 2010 by RaPeP (Rapid Peano Prototyping)

# Include files
-include files.mk

# Select Compiler
# ---------------
CC=g++
#CC=icpc


#
# Compiler flags that are Peano-specific
# --------------------------------------
#
CFLAGS_PEANO=-DDim2 -DAsserts -DDebug

# Compiler flags for GNU Compiler
# -------------------------------
COMMON_FLAGS=
CFLAGS_GCC=-O0 -pedantic -pedantic-errors -Wall -Werror -Wstrict-aliasing -fstrict-aliasing -fno-rtti -fno-exceptions
LFLAGS_GCC=
CFLAGS=$(CFLAGS_PEANO) $(CFLAGS_GCC) $(COMMON_FLAGS)
LFLAGS=$(LFLAGS_GCC) $(COMMON_FLAGS)
EXECUTABLE=peano


# Compiler flags for Intel Compiler
# ---------------------------------
#COMMON_FLAGS=-fast
#CFLAGS_ICPC=-fstrict-aliasing -qpack_semantic=gnu $(TBB_INC)
#LFLAGS_ICPC=$(TBB_SHLIB)
#CFLAGS=$(CFLAGS_PEANO) $(CFLAGS_ICPC) $(COMMON_FLAGS)
#LFLAGS=$(LFLAGS_ICPC) $(COMMON_FLAGS)
#EXECUTABLE=peano


# Compiler flags for sciCoDE with GNU Compiler
# -------------------------------------------
#COMMON_FLAGS=
#EXECUTABLE=libNavierstokes.so
#CFLAGS_GCC=-DCCA -O3 -pedantic -pedantic-errors -Wall -Werror -Wstrict-aliasing -fstrict-aliasing -Wno-long-long -I/usr/lib/jvm/java-6-sun/include -I/usr/lib/jvm/java-6-sun/include/linux  -fPIC
#LFLAGS_GCC=-shared -Wl,-soname=$(EXECUTABLE)
#CFLAGS=$(CFLAGS_PEANO) $(CFLAGS_GCC) $(COMMON_FLAGS)
#LFLAGS=$(LFLAGS_GCC) $(COMMON_FLAGS)




OBJECTS=$(SOURCES:.cpp=.o)


all: header $(EXECUTABLE) trailer

header:
	@echo  --- This is Peano 2 ---
	@echo \(C\) 2010 Technische Universitaet Muenchen
	@echo generated by the Rapid Peano Prototyping tool \(RaPeP\)
	@echo author: Tobias Weinzierl
	@echo
	@echo Please type in
	@echo   make addfiles
	@echo   make addtbb \(if you want TBB support\)
	@echo   make \(to build your sources\)
	@echo
	@echo   make dist \(to create tar.gz file of your distribution\)
	@echo   make scicode \(to create a sciCoDE component\)
	@echo

trailer:
	@echo
	@echo build of Peano with component Navierstokes successful
	@echo visit Peano\'s homepage at http://www5.in.tum.de/peano

addfiles:
	find src/tarch/compiler -name '*.cpp' -printf '%p ' >> files.mk
	find src/tarch/configuration -name '*.cpp' -printf '%p ' >> files.mk
	find src/tarch/irr -name '*.cpp' -printf '%p ' >> files.mk
	find src/tarch/la -name '*.cpp' -printf '%p ' >> files.mk
	find src/tarch/logging -name '*.cpp' -printf '%p ' >> files.mk
	find src/tarch/utils -name '*.cpp' -printf '%p ' >> files.mk
	find src/tarch/tests -name '*.cpp' -printf '%p ' >> files.mk
	find src/tarch/plotter -name '*.cpp' -printf '%p ' >> files.mk
	find src/tarch/services -name '*.cpp' -printf '%p ' >> files.mk
	find src/peano/utils -name '*.cpp' -printf '%p ' >> files.mk
	find src/peano/geometry/*.cpp -name '*.cpp' -printf '%p ' >> files.mk
	find src/peano/geometry/builtin -name '*.cpp' -printf '%p ' >> files.mk
	find src/peano/kernel/configurations -name '*.cpp' -printf '%p ' >> files.mk
	find src/peano/kernel/regulargrid  -name '*.cpp' -printf '%p ' >> files.mk
	find src/peano/kernel/multicore  -name '*.cpp' -printf '%p ' >> files.mk
	find src/peano/toolbox  -name '*.cpp' -printf '%p ' >> files.mk
	find src/peano/applications/navierstokes/prototype2 -name '*.cpp' -printf '%p ' >> files.mk
	find src/*.cpp -printf '%p ' >> files.mk
	find src/peano/*.cpp -printf '%p ' >> files.mk

addtbb:
	find src/tarch/multicore -name '*.cpp' -printf '%p ' >> files.mk
	
dist: all
	tar -cf peano-Navierstokes.tar src/tarch src/peano/utils src/peano/geometry src/peano/kernel src/peano/applications/navierstokes/prototype2 src/*.cpp src/peano/*.cpp makefile src/*.xml
	gzip peano-Navierstokes.tar

#
# Please, adopt this file to your needs
#
scicode: all
	@echo This is just a template. Please adopt your makefile before you invoke this target
	exit
	mkdir dist
	cp $(EXECUTABLE) dist
	cp src/peano/applications/navierstokes/prototype2/cca/*.sidl dist
	cp src/peano/applications/navierstokes/prototype2/cca/*.xml dist
	cd dist
	zip Navierstokes.scicode-component $(EXECUTABLE) *.sidl *.xml
	

$(EXECUTABLE): $(OBJECTS)
	$(CC) $(LFLAGS) $(OBJECTS) -o $@ 

clean:
	echo -n SOURCES= > files.mk
	rm -f $(OBJECTS)


$(OBJECTS): %.o : %.cpp
	$(CC) $(CFLAGS) -c -Isrc $< -o $@
