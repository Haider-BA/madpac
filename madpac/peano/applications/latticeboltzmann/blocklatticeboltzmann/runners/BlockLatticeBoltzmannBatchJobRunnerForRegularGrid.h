// Copyright (C) 2009 Technische Universitaet Muenchen
// This file is part of the Peano project. For conditions of distribution and
// use, please see the copyright notice at www5.in.tum.de/peano
#ifndef PEANO_APPLICATIONS_LATTICEBOLTZMANN_BLOCKLATTICEBOLTZMANN_RUNNERS_BlockLatticeBoltzmannBatchJobRunner__FOR_REGULAR_GRID_H_
#define PEANO_APPLICATIONS_LATTICEBOLTZMANN_BLOCKLATTICEBOLTZMANN_RUNNERS_BlockLatticeBoltzmannBatchJobRunner__FOR_REGULAR_GRID_H_

#include "peano/utils/Dimensions.h"
#include "peano/applications/latticeboltzmann/blocklatticeboltzmann/configurations/BlockLatticeBoltzmannBatchJobConfigurationForRegularGrid.h"
#include "peano/applications/latticeboltzmann/blocklatticeboltzmann/services/PerformanceMeasurementService.h"

#include "peano/geometry/extensions/GeometryEnlargement.h"
#include "peano/geometry/services/FunctionalGeometryService.h"
#include "peano/integration/partitioncoupling/services/CouplingService.h"
#include "peano/integration/partitioncoupling/services/ReceiveDataService.h"
#include "peano/integration/partitioncoupling/services/SendDataService.h"
#include "scenario/latticeboltzmann/blocklatticeboltzmann/services/ReceiveBoundaryDataService.h"
#include "peano/applications/latticeboltzmann/blocklatticeboltzmann/services/GridManagementService.h"
#include "peano/applications/latticeboltzmann/blocklatticeboltzmann/services/ForceSynchronisationService.h"
#include "tarch/logging/Log.h"
#include "peano/kernel/datatraversal/autotuning/Oracle.h"

namespace peano {
  namespace applications {
    namespace latticeboltzmann {
      namespace blocklatticeboltzmann {
    namespace runners {
      class BlockLatticeBoltzmannBatchJobRunnerForRegularGrid;
    }
    namespace configurations {
      class BlockLatticeBoltzmannBatchJobConfigurationForRegularGrid;
    }
    namespace repositories {
      class BlockLatticeBoltzmannBatchJobRepositoryForRegularGrid;
    }
}
}
}
}



/**
 * Runner for the regular grid.
 *
 * @author Generated by the RaPeP (Peano Rapid Prototyping) tool.
 */
class peano::applications::latticeboltzmann::blocklatticeboltzmann::runners::BlockLatticeBoltzmannBatchJobRunnerForRegularGrid {
  private:
    static tarch::logging::Log _log;

    void initServices(const peano::applications::latticeboltzmann::blocklatticeboltzmann::configurations::BlockLatticeBoltzmannBatchJobConfigurationForRegularGrid& configuration);

    void shutdownServices(const peano::applications::latticeboltzmann::blocklatticeboltzmann::configurations::BlockLatticeBoltzmannBatchJobConfigurationForRegularGrid& configuration);

    int runAsMaster(
      peano::applications::latticeboltzmann::blocklatticeboltzmann::repositories::BlockLatticeBoltzmannBatchJobRepositoryForRegularGrid& repository
    );

    #ifdef Parallel
    int runAsClient(peano::applications::latticeboltzmann::blocklatticeboltzmann::repositories::BlockLatticeBoltzmannBatchJobRepositoryForRegularGrid& repository);
    #endif

    void handleDynamicGeometry(peano::applications::latticeboltzmann::blocklatticeboltzmann::repositories::BlockLatticeBoltzmannBatchJobRepositoryForRegularGrid& repository);


  public:
    BlockLatticeBoltzmannBatchJobRunnerForRegularGrid();
    virtual ~BlockLatticeBoltzmannBatchJobRunnerForRegularGrid();

    /**
     * Executes the run for one configuration.
     *
     * Whenever the configuration file parser encounters a tag corresponding to
     * a regular grid runner, it tells the corresponding configuration class
     * configurations::peano::applications::latticeboltzmann::blocklatticeboltzmann::configurations::BlockLatticeBoltzmannBatchJobConfigurationForRegularGrid
     * to create an instance of this class and to parse the configuration file.
     * If the latter is valid, Peano afterwards calls the runner's run() routine
     * and passes it the configuration instance.
     *
     * @param configuration Valid configuration for this experiment run.
     */
    int run(const peano::applications::latticeboltzmann::blocklatticeboltzmann::configurations::BlockLatticeBoltzmannBatchJobConfigurationForRegularGrid& configuration);
};

#endif
