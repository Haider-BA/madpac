#include "peano/utils/Globals.h"

Constant: DIMENSIONS hint-value 4;
Constant: DIMENSIONS_TIMES_TWO hint-value 8;

/**
 * The packed type should be defined by the application's dof. I recommend short
 * int, i.e. using the following statement:
 *
 * Packed-Type: short int;
 */

class peano::kernel::grid::dastgen::SpacetreeCell {
  enum State {
      /**
       * The element corresponds to a leaf cell, that  might be refined
       * during the iteration. If a leaf transforms into a refined spacetree
       * node, all the operations for a refined cell are called instead of the
       * leaf operations. Otherwise enterElement() and leaveElement() is called
       * for the leaf node.
       */
      Leaf,
      /**
       * Identifies a refined spacetree node. Please see
       * grid::MockGridEventHandle for a detailed description what operation
       * squence is triggered for a refined node.
       */
      Refined,
      /**
       * Corresponds to the spacetree root. Usually, one should not use this
       * flag. If an initialisation or a shutdown has to be done for every
       * iteration, use the beginTraversal() and endTraversal() operation.
       */
      Root
  };

  /**
   * A cell is inside if it is completely inside the (compact/closed) 
   * computational domain. If the computational domain boundary cuts the cell, 
   * it is outside. 
   */
  persistent packed bool  isInside;


  /**
   * Defines the state of the event. In the release mode, the state has to be
   * exchanged, too. Otherwise, it is impossible for the algorithm to merge
   * subdomains.
   */
  persistent parallelise packed State state;
  
  #ifdef Debug
  persistent parallelise int level;
  #endif

  #ifdef Parallel
  /**
   * The delta holds the difference to be obtained within the subtree
   * represented by this type to obtain optimal load balancing. This means,
   * if _delta is greater zero, there's no need to fork within the subtree.
   * If _delta is smaller zero, the algorithm should try to speed up the
   * subtree computation.
   */
  persistent parallelise int delta;

  /**
   * Holds the rank of the node that is active on this element. By comparing
   * this attribute ob super- and subclass one can identify fork layers.
   */
  persistent int rankOfActiveNode;

  /**
   * Maximal weight of the shared child nodes.
   */
  persistent parallelise double maxChildWeight;

  /**
   * Weight of the subtree represented by this event on the current node. So,
   * for a leaf event this weight equals LeafWeight, for any other event it
   * equals LeafWeight added the weights of the children.
   */
  persistent parallelise double accumulatedWeight;

  #endif
  
  /**
   * Defines whether this event belongs to an even column, row, plate etc.
   * There is no need to exchange this data throughout the iterations or 
   * even a join.
   */
  persistent packed bool evenFlags[DIMENSIONS];

  /**
   * Identifies when the corresponding face is touched again. Negative values
   * mean, this face has been touched before, positive values say this face
   * will be touched later on.
   * There is no need to exchange this data throughout the iterations or 
   * even a join.
   *
   * @todo Hier muessen Symbolische Konstanten DIMENSIONS_TIMES_TWO verwendet
   *       werden statt dieser festen Konstanten
   * @todo Hier sollte ein packed stehen!
   */
  persistent short int accessNumber[DIMENSIONS_TIMES_TWO] from -8 to 8;  
};
